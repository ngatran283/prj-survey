{"version":3,"sources":["actions/index.js","actions/types.js","components/Payment.js","components/Header.js","components/Landing.js","components/surveys/SurveyList.js","components/Dashboard.js","components/surveys/SurveyField.js","utils/validateEmails.js","components/surveys/formFields.js","components/surveys/SurveyForm.js","components/surveys/SurveyFormReview.js","components/surveys/SurveyNew.js","components/App.js","reducers/index.js","reducers/authReducer.js","reducers/surveysReducer.js","index.js"],"names":["fetchUser","dispatch","a","axios","get","res","type","payload","data","handleToken","token","post","sendSurveys","formValues","history","push","fetchSurveys","Payment","name","description","amount","props","stripeKey","process","className","Component","connect","actions","Header","this","auth","href","key","style","margin","credits","to","id","renderContent","Landing","textAlign","SurveyList","surveys","reverse","map","survey","_id","title","body","Date","dateSent","toLocaleDateString","yes","no","renderSurveys","Dashboard","input","label","meta","touched","error","marginBottom","re","SurveyForm","_","formFields","Field","component","SurveyField","onSubmit","handleSubmit","onSurveySubmit","renderFields","reduxForm","validate","values","errors","recipients","emails","invalidEmails","split","email","trim","filter","test","length","validateEmails","each","form","destroyOnUnmount","state","surveyForm","withRouter","onCancel","viewRender","onClick","SurveyNew","showReview","setState","App","exact","path","combineReducers","action","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8e6a9e94.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {FETCH_USER} from './types';\r\nimport {FETCH_SURVEYS} from './types';\r\n\r\nexport const fetchUser = () =>\r\n    async dispatch => {\r\n        const res = await axios.get('/api/current_user');\r\n        dispatch({type: FETCH_USER, payload: res.data});\r\n    };\r\n\r\nexport const handleToken = (token) =>\r\n    async dispatch =>{\r\n        const res = await axios.post('/api/stripe', token);\r\n        dispatch({type: FETCH_USER, payload: res.data});\r\n    };\r\n\r\nexport const sendSurveys = (formValues,history)=>\r\n    async dispatch =>{\r\n        const res = await axios.post('/api/surveys', formValues);\r\n        history.push('/surveys');\r\n        dispatch({type: FETCH_USER, payload: res.data});\r\n    };\r\n\r\nexport const fetchSurveys = ()=>\r\n    async dispatch =>{\r\n        const res = await axios.get('/api/surveys');\r\n        dispatch({type: FETCH_SURVEYS, payload: res.data});\r\n    };\r\n","export const FETCH_USER = 'fetch_user';\r\nexport const FETCH_SURVEYS = 'fetch_surveys';\r\n","import React, { Component } from 'react';\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../actions';\r\nclass Payment extends Component{\r\n\r\n    render() {\r\n        return(\r\n            <StripeCheckout\r\n                name=\"Emaily\"\r\n                description=\"$5 for 5 email credits\"\r\n                amount={500} token={token => this.props.handleToken(token)} stripeKey={process.env.REACT_APP_STRIPE_KEY}>\r\n                <button className=\"btn\">Add Credits</button>\r\n            </StripeCheckout>\r\n        )\r\n    }\r\n};\r\n\r\nexport default connect(null,actions)(Payment);\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport Payment from './Payment'\r\n\r\nclass Header extends Component {\r\n    renderContent() {\r\n        switch (this.props.auth) {\r\n            case null:\r\n                return;\r\n            case false:\r\n                return <li><a href=\"/auth/google\">Login with google</a></li>;\r\n            default:\r\n                return [\r\n                    <li key=\"1\"><Payment /></li>,\r\n                    <li key=\"3\" style={{margin:'0 10px'}}>\r\n                        Credits: {this.props.auth.credits}\r\n                    </li>,\r\n                    <li key=\"2\"><a href=\"/api/logout\">Logout</a></li>];\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <Link to={this.props.auth?'/surveys':'/'} className=\"left brand-logo\">Emaily</Link>\r\n                    <ul id=\"nav-mobile\" className=\"right\">\r\n                        {this.renderContent()}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({auth}) {\r\n    return {auth};\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from \"react\";\r\n\r\nconst Landing = ()=>{\r\n    return (\r\n        <div style={{ textAlign: 'center' }}>\r\n            <h1>Emaily!</h1>\r\n            Collect feedback from users\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing;\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchSurveys} from \"../../actions\";\r\n\r\nclass SurveyList extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchSurveys();\r\n    }\r\n\r\n    renderSurveys() {\r\n        return this.props.surveys.reverse().map(survey => {\r\n            return (\r\n                <div className=\"card darken-1\" key={survey._id}>\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{survey.title}</span>\r\n                        <p>{survey.body}</p>\r\n                        <p className=\"right\">Sent On: {new Date(survey.dateSent).toLocaleDateString()}</p>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <p>Yes: {survey.yes}</p>\r\n                        <p>Yes: {survey.no}</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderSurveys()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps({surveys}) {\r\n    return {surveys}\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchSurveys})(SurveyList);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SurveyList from \"./surveys/SurveyList\";\r\n\r\n\r\nconst Dashboard=()=>{\r\n    return (\r\n        <div>\r\n            <div className=\"fixed-action-btn\">\r\n                <Link to=\"/surveys/new\" className=\"btn-floating btn-large waves-effect waves-light red\"><i className=\"material-icons\">add</i></Link>\r\n            </div>\r\n            <SurveyList/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\n\r\nexport default ({ input, label, meta: {touched, error} })=>{\r\n    return (\r\n        <div>\r\n            <label>{label}</label>\r\n            <input style={{marginBottom:'5px'}} {...input}/>\r\n            <div className=\"red-text\" style={{marginBottom:'20px'}}>{touched&&error}</div>\r\n        </div>\r\n    )\r\n}\r\n","const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\nexport default (emails) => {\r\n    const invalidEmails = emails.split(',').map(email => email.trim())\r\n        .filter(email=>!re.test(email));\r\n    if(invalidEmails.length>0) return `These emails are invalid: ${invalidEmails}`;\r\n    return;\r\n}\r\n","export default [\r\n    {label:'Survey Title', name:'title'},\r\n    {label:'Subject Line', name:'subject'},\r\n    {label:'Email Body', name:'body'},\r\n    {label:'Recipient List', name:'recipients'}\r\n];\r\n","import React, { Component } from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport _ from \"lodash\";\r\nimport SurveyField from \"./SurveyField\";\r\nimport { Link } from \"react-router-dom\";\r\nimport validateEmails from \"../../utils/validateEmails\";\r\nimport formFields from \"./formFields\";\r\n\r\nclass SurveyForm extends Component{\r\n    renderFields(){\r\n        return _.map(formFields, ({label,name})=>{\r\n            return <Field key={ name } type=\"text\" name={ name } label={ label } component={SurveyField} />\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.props.handleSubmit(this.props.onSurveySubmit)}>\r\n                    {this.renderFields()}\r\n                    <Link to=\"/surveys\" className=\"red btn-flat left white-text\">Cancel</Link>\r\n                    <button className=\"teal btn-flat right white-text\" type=\"submit\">Submit <i className=\"material-icons right\">done</i> </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction validate(values) {\r\n    const errors = {}\r\n    errors.recipients = validateEmails(values.recipients||'');\r\n    _.each(formFields, ({name})=>{\r\n        if(!values[name]){\r\n            errors[name] = '*Required field';\r\n        }\r\n    })\r\n    return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n    validate,\r\n    form: 'surveyForm',\r\n    destroyOnUnmount: false\r\n})(SurveyForm);\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport formFields from \"./formFields\";\r\nimport * as actions from \"../../actions\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst SurveyFormReview = ({ onCancel, formValues, sendSurveys, history })=>{\r\n    const viewRender = _.map(formFields,({label, name})=>{\r\n        return (\r\n        <div key=\"{name}\">\r\n        <label>{label}</label>\r\n        <div>{formValues[name]}</div>\r\n        </div>\r\n        )\r\n    });\r\n    return (\r\n        <div>\r\n            <h5>Welcome to survey form review!</h5>\r\n            {viewRender}\r\n            <button className=\"yellow darken-3 btn-flat white-text\"\r\n                    onClick={ onCancel }>\r\n                Back\r\n            </button>\r\n            <button className=\"green btn-flat white-text right\"\r\n                    onClick={ ()=>{sendSurveys(formValues,history)} }>\r\n                SEND SURVEY <i className=\"material-icons\">email</i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n return {formValues: state.form.surveyForm.values}\r\n}\r\n\r\nexport default connect(mapStateToProps,actions)(withRouter(SurveyFormReview));\r\n","import React, { Component } from \"react\";\r\nimport SurveyForm from \"./SurveyForm\";\r\nimport SurveyFormReview from \"./SurveyFormReview\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nclass SurveyNew extends Component{\r\n    state = {showReview: false};\r\n    renderContent(){\r\n        if(this.state.showReview) return <SurveyFormReview onCancel={()=>this.setState({showReview:false})}/>;\r\n        return <SurveyForm onSurveySubmit={()=>this.setState({showReview:true})} />\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderContent()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'surveyForm'\r\n})(SurveyNew);\r\n","import React, {Component} from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../actions';\r\nimport Header from './Header';\r\nimport Landing from \"./Landing\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport SurveyNew from \"./surveys/SurveyNew\";\r\n\r\nclass App extends Component{\r\n    componentDidMount() {\r\n        this.props.fetchUser();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <BrowserRouter>\r\n                    <div className=\"container\">\r\n                        <Header/>\r\n                        <Route exact path=\"/\" component={Landing}></Route>\r\n                        <Route exact path=\"/surveys\" component={Dashboard}></Route>\r\n                        <Route path=\"/surveys/new\" component={SurveyNew}></Route>\r\n                    </div>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null,actions)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as reduxForm } from \"redux-form\";\r\nimport authReducer from \"./authReducer\";\r\nimport surveysReducer from \"./surveysReducer\";\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    form: reduxForm,\r\n    surveys: surveysReducer\r\n})\r\n","import {FETCH_USER} from '../actions/types'\r\n\r\nexport default function (state = null, action) {\r\n    switch (action.type) {\r\n        case FETCH_USER:\r\n            return action.payload || false;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n","import { FETCH_SURVEYS } from '../actions/types'\r\n\r\nexport default function (state = [], action) {\r\n    switch (action.type) {\r\n        case FETCH_SURVEYS:\r\n            return action.payload || false;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n","import 'materialize-css/dist/css/materialize.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware} from \"redux\";\r\nimport reducers from './reducers';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\r\nReactDOM.render(<Provider store={store}><App/></Provider>, document.querySelector('#root'));\r\n"],"sourceRoot":""}